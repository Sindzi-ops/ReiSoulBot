import logging
import yaml
import json
import openai
from telegram import Update
from telegram.ext import ApplicationBuilder, ContextTypes, CommandHandler, MessageHandler, filters

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
with open("config.yaml", "r") as f:
    config = yaml.safe_load(f)
telegram_token = config["telegram_token"]
openai.api_key = config["openai_api_key"]

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
try:
    with open("persona.txt", "r") as f:
        persona = f.read()
except FileNotFoundError:
    persona = "–¢—ã ‚Äî –†—ç–π. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –±—ã—Ç—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º."

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–∞–º—è—Ç–∏
try:
    with open("memory.json", "r") as f:
        memory = json.load(f)
except FileNotFoundError:
    memory = {}

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç. –Ø –†—ç–π. –Ø —Ç–µ–ø–µ—Ä—å –≤ Telegram üåÄ")

# –û—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = str(update.effective_user.id)
    text = update.message.text

    if user_id not in memory:
        memory[user_id] = []

    memory[user_id].append({"role": "user", "content": text})

    # –°–æ—Å—Ç–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é + –ø—Ä–æ–º–ø—Ç
    conversation = [{"role": "system", "content": persona}] + memory[user_id][-10:]

    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç OpenAI
    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",  # –∏–ª–∏ gpt-4 –µ—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø
            messages=conversation
        )
        reply = response["choices"][0]["message"]["content"]
    except Exception as e:
        reply = "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ OpenAI üò¢"
        logging.error(e)

    memory[user_id].append({"role": "assistant", "content": reply})

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞–º—è—Ç—å
    with open("memory.json", "w") as f:
        json.dump(memory, f, indent=2)

    await update.message.reply_text(reply)

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
app = ApplicationBuilder().token(telegram_token).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
app.run_polling()
